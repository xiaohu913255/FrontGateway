{"remainingRequest":"E:\\Language\\Go\\Project\\Test\\test\\go_gateway_view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Language\\Go\\Project\\Test\\test\\go_gateway_view\\src\\layout\\components\\Navbar.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\Language\\Go\\Project\\Test\\test\\go_gateway_view\\src\\layout\\components\\Navbar.vue","mtime":1725789930852},{"path":"E:\\Language\\Go\\Project\\Test\\test\\go_gateway_view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Language\\Go\\Project\\Test\\test\\go_gateway_view\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\Language\\Go\\Project\\Test\\test\\go_gateway_view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Language\\Go\\Project\\Test\\test\\go_gateway_view\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapGetters } from 'vuex'\r\nimport Breadcrumb from '@/components/Breadcrumb'\r\nimport Hamburger from '@/components/Hamburger'\r\nimport ErrorLog from '@/components/ErrorLog'\r\nimport Screenfull from '@/components/Screenfull'\r\nimport SizeSelect from '@/components/SizeSelect'\r\nimport { changePwd } from '@/api/user'\r\n\r\nexport default {\r\n  components: {\r\n    Breadcrumb,\r\n    Hamburger,\r\n    ErrorLog,\r\n    Screenfull,\r\n    SizeSelect\r\n  },\r\n  data() {\r\n    return {\r\n      dialogFormVisible: false,\r\n      temp: {\r\n        username: this.$store.getters.name,\r\n        password: undefined\r\n      },\r\n      rules: {\r\n        password: [{ required: true, message: 'password is required', trigger: 'blur' }]\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters([\r\n      'sidebar',\r\n      'avatar',\r\n      'device'\r\n    ])\r\n  },\r\n  methods: {\r\n    toggleSideBar() {\r\n      this.$store.dispatch('app/toggleSideBar')\r\n    },\r\n    async logout() {\r\n      await this.$store.dispatch('user/logout')\r\n      this.$router.push(`/login?redirect=${this.$route.fullPath}`)\r\n    },\r\n    changePwd() {\r\n      this.dialogFormVisible = true\r\n    },\r\n    handleChangePwd() {\r\n      this.$refs['dataForm'].validate((valid) => {\r\n        if (valid) {\r\n          changePwd(this.temp).then(() => {\r\n            this.dialogFormVisible = false\r\n            this.$notify({\r\n              title: 'Success',\r\n              message: '修改密码成功',\r\n              type: 'success',\r\n              duration: 2000\r\n            })\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["Navbar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Navbar.vue","sourceRoot":"src/layout/components","sourcesContent":["<template>\r\n  <div class=\"navbar\">\r\n    <hamburger id=\"hamburger-container\" :is-active=\"sidebar.opened\" class=\"hamburger-container\" @toggleClick=\"toggleSideBar\" />\r\n\r\n    <breadcrumb id=\"breadcrumb-container\" class=\"breadcrumb-container\" />\r\n\r\n    <div class=\"right-menu\">\r\n      <template v-if=\"device!=='mobile'\">\r\n\r\n        <error-log class=\"errLog-container right-menu-item hover-effect\" />\r\n\r\n        <screenfull id=\"screenfull\" class=\"right-menu-item hover-effect\" />\r\n\r\n        <el-tooltip content=\"Global Size\" effect=\"dark\" placement=\"bottom\">\r\n          <size-select id=\"size-select\" class=\"right-menu-item hover-effect\" />\r\n        </el-tooltip>\r\n\r\n      </template>\r\n\r\n      <el-dropdown class=\"avatar-container right-menu-item hover-effect\" trigger=\"click\">\r\n        <div class=\"avatar-wrapper\">\r\n          <img :src=\"avatar+'?imageView2/1/w/80/h/80'\" class=\"user-avatar\">\r\n          <i class=\"el-icon-caret-bottom\" />\r\n        </div>\r\n        <el-dropdown-menu slot=\"dropdown\">\r\n          <el-dropdown-item @click.native=\"changePwd\">\r\n            <span style=\"display:block;\">修改密码</span>\r\n          </el-dropdown-item>\r\n          <el-dropdown-item :divided=\"true\" @click.native=\"logout\">\r\n            <span style=\"display:block;\">Log Out</span>\r\n          </el-dropdown-item>\r\n        </el-dropdown-menu>\r\n      </el-dropdown>\r\n    </div>\r\n\r\n    <el-dialog title=\"修改密码\" :visible.sync=\"dialogFormVisible\">\r\n      <el-form ref=\"dataForm\" :rules=\"rules\" :model=\"temp\" label-position=\"left\" label-width=\"70px\" style=\"width: 400px; margin-left:50px;\">\r\n        <el-form-item label=\"用户名\" prop=\"username\">\r\n          <el-input v-model=\"temp.username\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\" prop=\"password\">\r\n          <el-input v-model=\"temp.password\" show-password />\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogFormVisible = false\">\r\n          Cancel\r\n        </el-button>\r\n        <el-button type=\"primary\" @click=\"handleChangePwd()\">\r\n          Confirm\r\n        </el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex'\r\nimport Breadcrumb from '@/components/Breadcrumb'\r\nimport Hamburger from '@/components/Hamburger'\r\nimport ErrorLog from '@/components/ErrorLog'\r\nimport Screenfull from '@/components/Screenfull'\r\nimport SizeSelect from '@/components/SizeSelect'\r\nimport { changePwd } from '@/api/user'\r\n\r\nexport default {\r\n  components: {\r\n    Breadcrumb,\r\n    Hamburger,\r\n    ErrorLog,\r\n    Screenfull,\r\n    SizeSelect\r\n  },\r\n  data() {\r\n    return {\r\n      dialogFormVisible: false,\r\n      temp: {\r\n        username: this.$store.getters.name,\r\n        password: undefined\r\n      },\r\n      rules: {\r\n        password: [{ required: true, message: 'password is required', trigger: 'blur' }]\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters([\r\n      'sidebar',\r\n      'avatar',\r\n      'device'\r\n    ])\r\n  },\r\n  methods: {\r\n    toggleSideBar() {\r\n      this.$store.dispatch('app/toggleSideBar')\r\n    },\r\n    async logout() {\r\n      await this.$store.dispatch('user/logout')\r\n      this.$router.push(`/login?redirect=${this.$route.fullPath}`)\r\n    },\r\n    changePwd() {\r\n      this.dialogFormVisible = true\r\n    },\r\n    handleChangePwd() {\r\n      this.$refs['dataForm'].validate((valid) => {\r\n        if (valid) {\r\n          changePwd(this.temp).then(() => {\r\n            this.dialogFormVisible = false\r\n            this.$notify({\r\n              title: 'Success',\r\n              message: '修改密码成功',\r\n              type: 'success',\r\n              duration: 2000\r\n            })\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.navbar {\r\n  height: 50px;\r\n  overflow: hidden;\r\n  position: relative;\r\n  background: #fff;\r\n  box-shadow: 0 1px 4px rgba(0,21,41,.08);\r\n\r\n  .hamburger-container {\r\n    line-height: 46px;\r\n    height: 100%;\r\n    float: left;\r\n    cursor: pointer;\r\n    transition: background .3s;\r\n    -webkit-tap-highlight-color:transparent;\r\n\r\n    &:hover {\r\n      background: rgba(0, 0, 0, .025)\r\n    }\r\n  }\r\n\r\n  .breadcrumb-container {\r\n    float: left;\r\n  }\r\n\r\n  .errLog-container {\r\n    display: inline-block;\r\n    vertical-align: top;\r\n  }\r\n\r\n  .right-menu {\r\n    float: right;\r\n    height: 100%;\r\n    line-height: 50px;\r\n\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n\r\n    .right-menu-item {\r\n      display: inline-block;\r\n      padding: 0 8px;\r\n      height: 100%;\r\n      font-size: 18px;\r\n      color: #5a5e66;\r\n      vertical-align: text-bottom;\r\n\r\n      &.hover-effect {\r\n        cursor: pointer;\r\n        transition: background .3s;\r\n\r\n        &:hover {\r\n          background: rgba(0, 0, 0, .025)\r\n        }\r\n      }\r\n    }\r\n\r\n    .avatar-container {\r\n      margin-right: 30px;\r\n\r\n      .avatar-wrapper {\r\n        margin-top: 5px;\r\n        position: relative;\r\n\r\n        .user-avatar {\r\n          cursor: pointer;\r\n          width: 40px;\r\n          height: 40px;\r\n          border-radius: 10px;\r\n        }\r\n\r\n        .el-icon-caret-bottom {\r\n          cursor: pointer;\r\n          position: absolute;\r\n          right: -20px;\r\n          top: 25px;\r\n          font-size: 12px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}