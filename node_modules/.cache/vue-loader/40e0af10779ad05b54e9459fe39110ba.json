{"remainingRequest":"E:\\Language\\Go\\Project\\Test\\Gateway\\FrontGateway\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\Language\\Go\\Project\\Test\\Gateway\\FrontGateway\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\Language\\Go\\Project\\Test\\Gateway\\FrontGateway\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Language\\Go\\Project\\Test\\Gateway\\FrontGateway\\src\\views\\service\\grpc.vue?vue&type=template&id=83f95f5c&scoped=true","dependencies":[{"path":"E:\\Language\\Go\\Project\\Test\\Gateway\\FrontGateway\\src\\views\\service\\grpc.vue","mtime":1725789930923},{"path":"E:\\Language\\Go\\Project\\Test\\Gateway\\FrontGateway\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Language\\Go\\Project\\Test\\Gateway\\FrontGateway\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\Language\\Go\\Project\\Test\\Gateway\\FrontGateway\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Language\\Go\\Project\\Test\\Gateway\\FrontGateway\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"mixin-components-container\" },\n    [\n      _c(\n        \"el-row\",\n        [\n          _c(\n            \"el-form\",\n            { ref: \"form\", attrs: { model: _vm.form, \"label-width\": \"130px\" } },\n            [\n              _c(\n                \"el-card\",\n                {\n                  staticClass: \"box-card\",\n                  staticStyle: { \"margin-bottom\": \"20px\" },\n                },\n                [\n                  _c(\n                    \"div\",\n                    {\n                      staticClass: \"clearfix\",\n                      attrs: { slot: \"header\" },\n                      slot: \"header\",\n                    },\n                    [\n                      _vm.is_edit === false\n                        ? _c(\"span\", [_vm._v(\"创建GRPC服务\")])\n                        : _vm._e(),\n                      _vm._v(\" \"),\n                      _vm.is_edit === true\n                        ? _c(\"span\", [_vm._v(\"修改GRPC服务\")])\n                        : _vm._e(),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    [\n                      _c(\n                        \"el-form-item\",\n                        {\n                          staticClass: \"is-required\",\n                          attrs: { label: \"服务名称\" },\n                        },\n                        [\n                          _c(\"el-input\", {\n                            attrs: {\n                              disabled: _vm.is_edit === true,\n                              placeholder: \"6-128位字母数字下划线\",\n                            },\n                            model: {\n                              value: _vm.form.service_name,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.form, \"service_name\", $$v)\n                              },\n                              expression: \"form.service_name\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"el-form-item\",\n                        {\n                          staticClass: \"is-required\",\n                          attrs: { label: \"服务描述\" },\n                        },\n                        [\n                          _c(\"el-input\", {\n                            attrs: { placeholder: \"最多255字符，必填\" },\n                            model: {\n                              value: _vm.form.service_desc,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.form, \"service_desc\", $$v)\n                              },\n                              expression: \"form.service_desc\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"el-form-item\",\n                        {\n                          staticClass: \"is-required\",\n                          attrs: { label: \"端口\" },\n                        },\n                        [\n                          _c(\"el-input\", {\n                            attrs: {\n                              disabled: _vm.is_edit === true,\n                              placeholder: \"需要设置8001-8999范围内数字，必填\",\n                            },\n                            model: {\n                              value: _vm.form.port,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.form, \"port\", $$v)\n                              },\n                              expression: \"form.port\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"metadata转换\" } },\n                        [\n                          _c(\"el-input\", {\n                            attrs: {\n                              placeholder:\n                                \"metadata转换支持增加(add)、删除(del)、修改(edit) 格式: add headname headvalue 多条换行\",\n                              type: \"textarea\",\n                              autosize: { minRows: 2, maxRows: 20 },\n                            },\n                            model: {\n                              value: _vm.form.header_transfor,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.form, \"header_transfor\", $$v)\n                              },\n                              expression: \"form.header_transfor\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"开启验证\" } },\n                        [\n                          _c(\"el-switch\", {\n                            attrs: {\n                              \"active-value\": \"1\",\n                              \"inactive-value\": \"0\",\n                            },\n                            model: {\n                              value: _vm.form.open_auth,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.form, \"open_auth\", $$v)\n                              },\n                              expression: \"form.open_auth\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"IP白名单\" } },\n                        [\n                          _c(\"el-input\", {\n                            attrs: {\n                              placeholder:\n                                \"格式: 127.0.0.1 多条换行，白名单优先级高于黑名单\",\n                              type: \"textarea\",\n                              autosize: { minRows: 2, maxRows: 20 },\n                            },\n                            model: {\n                              value: _vm.form.white_list,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.form, \"white_list\", $$v)\n                              },\n                              expression: \"form.white_list\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"IP黑名单\" } },\n                        [\n                          _c(\"el-input\", {\n                            attrs: {\n                              placeholder: \"格式: 127.0.0.1 多条换行\",\n                              type: \"textarea\",\n                              autosize: { minRows: 2, maxRows: 20 },\n                            },\n                            model: {\n                              value: _vm.form.black_list,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.form, \"black_list\", $$v)\n                              },\n                              expression: \"form.black_list\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"客户端限流\" } },\n                        [\n                          _c(\"el-input\", {\n                            attrs: { placeholder: \"0表示无限制\" },\n                            model: {\n                              value: _vm.form.clientip_flow_limit,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.form, \"clientip_flow_limit\", $$v)\n                              },\n                              expression: \"form.clientip_flow_limit\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"服务端限流\" } },\n                        [\n                          _c(\"el-input\", {\n                            attrs: { placeholder: \"0表示无限制\" },\n                            model: {\n                              value: _vm.form.service_flow_limit,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.form, \"service_flow_limit\", $$v)\n                              },\n                              expression: \"form.service_flow_limit\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"轮询方式\" } },\n                        [\n                          _c(\n                            \"el-radio\",\n                            {\n                              attrs: { label: \"0\" },\n                              model: {\n                                value: _vm.form.round_type,\n                                callback: function ($$v) {\n                                  _vm.$set(_vm.form, \"round_type\", $$v)\n                                },\n                                expression: \"form.round_type\",\n                              },\n                            },\n                            [_vm._v(\"random\")]\n                          ),\n                          _vm._v(\" \"),\n                          _c(\n                            \"el-radio\",\n                            {\n                              attrs: { label: \"1\" },\n                              model: {\n                                value: _vm.form.round_type,\n                                callback: function ($$v) {\n                                  _vm.$set(_vm.form, \"round_type\", $$v)\n                                },\n                                expression: \"form.round_type\",\n                              },\n                            },\n                            [_vm._v(\"round-robin\")]\n                          ),\n                          _vm._v(\" \"),\n                          _c(\n                            \"el-radio\",\n                            {\n                              attrs: { label: \"2\" },\n                              model: {\n                                value: _vm.form.round_type,\n                                callback: function ($$v) {\n                                  _vm.$set(_vm.form, \"round_type\", $$v)\n                                },\n                                expression: \"form.round_type\",\n                              },\n                            },\n                            [_vm._v(\"weight_round-robin\")]\n                          ),\n                          _vm._v(\" \"),\n                          _c(\n                            \"el-radio\",\n                            {\n                              attrs: { label: \"3\" },\n                              model: {\n                                value: _vm.form.round_type,\n                                callback: function ($$v) {\n                                  _vm.$set(_vm.form, \"round_type\", $$v)\n                                },\n                                expression: \"form.round_type\",\n                              },\n                            },\n                            [_vm._v(\"ip_hash\")]\n                          ),\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"el-form-item\",\n                        {\n                          staticClass: \"is-required\",\n                          attrs: { label: \"IP列表\" },\n                        },\n                        [\n                          _c(\"el-input\", {\n                            attrs: {\n                              placeholder: \"格式: 127.0.0.1:80 多条换行\",\n                              type: \"textarea\",\n                              autosize: { minRows: 2, maxRows: 20 },\n                            },\n                            model: {\n                              value: _vm.form.ip_list,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.form, \"ip_list\", $$v)\n                              },\n                              expression: \"form.ip_list\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"el-form-item\",\n                        {\n                          staticClass: \"is-required\",\n                          attrs: { label: \"权重列表\" },\n                        },\n                        [\n                          _c(\"el-input\", {\n                            attrs: {\n                              placeholder: \"格式: 50 多条换行\",\n                              type: \"textarea\",\n                              autosize: { minRows: 2, maxRows: 20 },\n                            },\n                            model: {\n                              value: _vm.form.weight_list,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.form, \"weight_list\", $$v)\n                              },\n                              expression: \"form.weight_list\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"el-form-item\",\n                        [\n                          _c(\n                            \"el-button\",\n                            {\n                              attrs: {\n                                type: \"primary\",\n                                loading: _vm.disableButton,\n                              },\n                              on: { click: _vm.onSubmit },\n                            },\n                            [_vm._v(\"立即提交\")]\n                          ),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  ),\n                ]\n              ),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}