{"remainingRequest":"E:\\Language\\Go\\Project\\Test\\Gateway\\FrontGateway\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Language\\Go\\Project\\Test\\Gateway\\FrontGateway\\src\\views\\dashboard\\components\\PieChart.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\Language\\Go\\Project\\Test\\Gateway\\FrontGateway\\src\\views\\dashboard\\components\\PieChart.vue","mtime":1725789930905},{"path":"E:\\Language\\Go\\Project\\Test\\Gateway\\FrontGateway\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Language\\Go\\Project\\Test\\Gateway\\FrontGateway\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\Language\\Go\\Project\\Test\\Gateway\\FrontGateway\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Language\\Go\\Project\\Test\\Gateway\\FrontGateway\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n\r\nimport echarts from 'echarts'\r\nrequire('echarts/theme/macarons') // echarts theme\r\nimport resize from './mixins/resize'\r\n\r\nexport default {\r\n  mixins: [resize],\r\n  props: {\r\n    className: {\r\n      type: String,\r\n      default: 'chart'\r\n    },\r\n    width: {\r\n      type: String,\r\n      default: '100%'\r\n    },\r\n    height: {\r\n      type: String,\r\n      default: '350px'\r\n    },\r\n    chartData: {\r\n      type: Object,\r\n      required: true,\r\n      default() {\r\n        return {\r\n          'title': '今日流量统计',\r\n          'legend': ['Industries', 'Technology', 'Forex', 'Gold', 'Forecasts'],\r\n          'series': [\r\n            { value: 320, name: 'Industries' },\r\n            { value: 240, name: 'Technology' },\r\n            { value: 149, name: 'Forex' },\r\n            { value: 100, name: 'Gold' },\r\n            { value: 59, name: 'Forecasts' }\r\n          ]\r\n        }\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      chart: null\r\n    }\r\n  },\r\n  watch: {\r\n    chartData: {\r\n      deep: true,\r\n      handler(val) {\r\n        this.initChart()\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.$nextTick(() => {\r\n      this.initChart()\r\n    })\r\n  },\r\n  beforeDestroy() {\r\n    if (!this.chart) {\r\n      return\r\n    }\r\n    this.chart.dispose()\r\n    this.chart = null\r\n  },\r\n  methods: {\r\n    initChart() {\r\n      this.chart = echarts.init(this.$el, 'macarons')\r\n\r\n      this.chart.setOption({\r\n        title: {\r\n          text: this.chartData.title,\r\n          textStyle: {\r\n            fontSize: 15\r\n          }\r\n        },\r\n        tooltip: {\r\n          trigger: 'item',\r\n          formatter: '{a} <br/>{b} : {c} ({d}%)'\r\n        },\r\n        legend: {\r\n          left: 'center',\r\n          bottom: '10',\r\n          data: this.chartData.legend\r\n        },\r\n        series: [\r\n          {\r\n            name: '服务占比',\r\n            type: 'pie',\r\n            top: 20,\r\n            // roseType: 'radius',\r\n            radius: '55%',\r\n            center: ['50%', '45%'],\r\n            data: this.chartData.series,\r\n            animationEasing: 'cubicInOut',\r\n            animationDuration: 2600\r\n          }\r\n        ]\r\n      })\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["PieChart.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PieChart.vue","sourceRoot":"src/views/dashboard/components","sourcesContent":["<template>\r\n  <div :class=\"className\" :style=\"{height:height,width:width}\" />\r\n</template>\r\n\r\n<script>\r\nimport echarts from 'echarts'\r\nrequire('echarts/theme/macarons') // echarts theme\r\nimport resize from './mixins/resize'\r\n\r\nexport default {\r\n  mixins: [resize],\r\n  props: {\r\n    className: {\r\n      type: String,\r\n      default: 'chart'\r\n    },\r\n    width: {\r\n      type: String,\r\n      default: '100%'\r\n    },\r\n    height: {\r\n      type: String,\r\n      default: '350px'\r\n    },\r\n    chartData: {\r\n      type: Object,\r\n      required: true,\r\n      default() {\r\n        return {\r\n          'title': '今日流量统计',\r\n          'legend': ['Industries', 'Technology', 'Forex', 'Gold', 'Forecasts'],\r\n          'series': [\r\n            { value: 320, name: 'Industries' },\r\n            { value: 240, name: 'Technology' },\r\n            { value: 149, name: 'Forex' },\r\n            { value: 100, name: 'Gold' },\r\n            { value: 59, name: 'Forecasts' }\r\n          ]\r\n        }\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      chart: null\r\n    }\r\n  },\r\n  watch: {\r\n    chartData: {\r\n      deep: true,\r\n      handler(val) {\r\n        this.initChart()\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.$nextTick(() => {\r\n      this.initChart()\r\n    })\r\n  },\r\n  beforeDestroy() {\r\n    if (!this.chart) {\r\n      return\r\n    }\r\n    this.chart.dispose()\r\n    this.chart = null\r\n  },\r\n  methods: {\r\n    initChart() {\r\n      this.chart = echarts.init(this.$el, 'macarons')\r\n\r\n      this.chart.setOption({\r\n        title: {\r\n          text: this.chartData.title,\r\n          textStyle: {\r\n            fontSize: 15\r\n          }\r\n        },\r\n        tooltip: {\r\n          trigger: 'item',\r\n          formatter: '{a} <br/>{b} : {c} ({d}%)'\r\n        },\r\n        legend: {\r\n          left: 'center',\r\n          bottom: '10',\r\n          data: this.chartData.legend\r\n        },\r\n        series: [\r\n          {\r\n            name: '服务占比',\r\n            type: 'pie',\r\n            top: 20,\r\n            // roseType: 'radius',\r\n            radius: '55%',\r\n            center: ['50%', '45%'],\r\n            data: this.chartData.series,\r\n            animationEasing: 'cubicInOut',\r\n            animationDuration: 2600\r\n          }\r\n        ]\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]}]}