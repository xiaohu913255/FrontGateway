{"remainingRequest":"E:\\Language\\Go\\Project\\Test\\test\\go_gateway_view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Language\\Go\\Project\\Test\\test\\go_gateway_view\\src\\views\\service\\tcp.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\Language\\Go\\Project\\Test\\test\\go_gateway_view\\src\\views\\service\\tcp.vue","mtime":1725789930926},{"path":"E:\\Language\\Go\\Project\\Test\\test\\go_gateway_view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Language\\Go\\Project\\Test\\test\\go_gateway_view\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\Language\\Go\\Project\\Test\\test\\go_gateway_view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Language\\Go\\Project\\Test\\test\\go_gateway_view\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport {\r\n  serviceDetail,\r\n  serviceAddTcp,\r\n  serviceUpdateTcp\r\n} from '@/api/service'\r\nexport default {\r\n  components: { },\r\n  data() {\r\n    return {\r\n      is_edit: false,\r\n      disableButton: false,\r\n      form: {\r\n        id: '0',\r\n        service_name: '',\r\n        service_desc: '',\r\n        port: '',\r\n        rule_type: '0',\r\n        rule: '',\r\n        need_https: '0',\r\n        need_strip_uri: '1',\r\n        need_websocket: '1',\r\n        url_rewrite: '',\r\n        header_transfor: '',\r\n        open_auth: '0',\r\n        black_list: '',\r\n        white_list: '',\r\n        white_host_name: '',\r\n        clientip_flow_limit: '',\r\n        service_flow_limit: '',\r\n        round_type: '2',\r\n        ip_list: '',\r\n        weight_list: '',\r\n        forbid_list: '',\r\n        upstream_connect_timeout: '',\r\n        upstream_header_timeout: '',\r\n        upstream_idle_timeout: '',\r\n        upstream_max_idle: ''\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    const id = this.$route.params && this.$route.params.id\r\n    if (id > 0) {\r\n      this.is_edit = true\r\n      this.fetchData(id)\r\n    }\r\n    this.tempRoute = Object.assign({}, this.$route)\r\n  },\r\n  methods: {\r\n    fetchData(id) {\r\n      this.listLoading = true\r\n      const query = {\r\n        id: id\r\n      }\r\n      serviceDetail(query).then(response => {\r\n        const formData = response.data\r\n\r\n        this.form.id = formData.info.id\r\n        this.form.service_name = formData.info.service_name\r\n        this.form.service_desc = formData.info.service_desc\r\n\r\n        this.form.port = formData.tcp_rule.port.toString()\r\n\r\n        this.form.rule_type = formData.http_rule.rule_type.toString()\r\n        this.form.rule = formData.http_rule.rule\r\n        this.form.need_https = formData.http_rule.need_https.toString()\r\n        this.form.need_strip_uri = formData.http_rule.need_strip_uri.toString()\r\n        this.form.need_websocket = formData.http_rule.need_websocket.toString()\r\n        this.form.url_rewrite = formData.http_rule.url_rewrite.replace(/,/g, '\\n')\r\n        this.form.header_transfor = formData.http_rule.header_transfor.replace(/,/g, '\\n')\r\n\r\n        this.form.open_auth = formData.access_control.open_auth.toString()\r\n        this.form.black_list = formData.access_control.black_list.replace(/,/g, '\\n')\r\n        this.form.white_list = formData.access_control.white_list.replace(/,/g, '\\n')\r\n        this.form.white_host_name = formData.access_control.white_host_name.replace(/,/g, '\\n')\r\n        this.form.clientip_flow_limit = formData.access_control.clientip_flow_limit\r\n        this.form.service_flow_limit = formData.access_control.service_flow_limit\r\n\r\n        this.form.round_type = formData.load_balance.round_type.toString()\r\n        this.form.ip_list = formData.load_balance.ip_list.replace(/,/g, '\\n')\r\n        this.form.weight_list = formData.load_balance.weight_list.replace(/,/g, '\\n')\r\n        this.form.forbid_list = formData.load_balance.forbid_list.replace(/,/g, '\\n')\r\n\r\n        this.form.upstream_connect_timeout = formData.load_balance.upstream_connect_timeout\r\n        this.form.upstream_header_timeout = formData.load_balance.upstream_header_timeout\r\n        this.form.upstream_idle_timeout = formData.load_balance.upstream_idle_timeout\r\n        this.form.upstream_max_idle = formData.load_balance.upstream_max_idle\r\n\r\n        this.listLoading = false\r\n      })\r\n    },\r\n    onSubmit() {\r\n      this.disableButton = true\r\n      const formData = Object.assign({}, this.form)\r\n      formData.port = Number(formData.port)\r\n      formData.rule_type = Number(formData.rule_type)\r\n      formData.need_https = Number(formData.need_https)\r\n      formData.need_strip_uri = Number(formData.need_strip_uri)\r\n      formData.need_websocket = Number(formData.need_websocket)\r\n      formData.open_auth = Number(formData.open_auth)\r\n      formData.round_type = Number(formData.round_type)\r\n      formData.clientip_flow_limit = Number(formData.clientip_flow_limit)\r\n      formData.service_flow_limit = Number(formData.service_flow_limit)\r\n      formData.upstream_connect_timeout = Number(formData.upstream_connect_timeout)\r\n      formData.upstream_header_timeout = Number(formData.upstream_header_timeout)\r\n      formData.upstream_idle_timeout = Number(formData.upstream_idle_timeout)\r\n      formData.upstream_max_idle = Number(formData.upstream_max_idle)\r\n\r\n      formData.ip_list = formData.ip_list.replace(/\\n/g, ',')\r\n      formData.weight_list = formData.weight_list.replace(/\\n/g, ',')\r\n      formData.forbid_list = formData.forbid_list.replace(/\\n/g, ',')\r\n      formData.white_host_name = formData.white_host_name.replace(/\\n/g, ',')\r\n      formData.white_list = formData.white_list.replace(/\\n/g, ',')\r\n      formData.black_list = formData.black_list.replace(/\\n/g, ',')\r\n      formData.header_transfor = formData.header_transfor.replace(/\\n/g, ',')\r\n      formData.url_rewrite = formData.url_rewrite.replace(/\\n/g, ',')\r\n\r\n      if (this.is_edit) {\r\n        serviceUpdateTcp(formData).then(() => {\r\n          this.disableButton = false\r\n          this.$notify({\r\n            title: 'Success',\r\n            message: 'Submit Successfully',\r\n            type: 'success',\r\n            duration: 500\r\n          })\r\n        }, () => {\r\n          this.disableButton = false\r\n        })\r\n      } else {\r\n        serviceAddTcp(formData).then(() => {\r\n          this.disableButton = false\r\n          this.$notify({\r\n            title: 'Success',\r\n            message: 'Submit Successfully',\r\n            type: 'success',\r\n            duration: 500\r\n          })\r\n        }, () => {\r\n          this.disableButton = false\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["tcp.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"tcp.vue","sourceRoot":"src/views/service","sourcesContent":["<template>\r\n  <div class=\"mixin-components-container\">\r\n    <el-row>\r\n      <el-form ref=\"form\" :model=\"form\" label-width=\"130px\">\r\n        <el-card class=\"box-card\" style=\"margin-bottom:20px;\">\r\n          <div slot=\"header\" class=\"clearfix\">\r\n            <span v-if=\"is_edit === false\">创建TCP服务</span>\r\n            <span v-if=\"is_edit === true\">修改TCP服务</span>\r\n          </div>\r\n          <div>\r\n            <el-form-item label=\"服务名称\" class=\"is-required\">\r\n              <el-input v-model=\"form.service_name\" :disabled=\"is_edit===true\" placeholder=\"6-128位字母数字下划线\" />\r\n            </el-form-item>\r\n            <el-form-item label=\"服务描述\" class=\"is-required\">\r\n              <el-input v-model=\"form.service_desc\" placeholder=\"最多255字符，必填\" />\r\n            </el-form-item>\r\n            <el-form-item label=\"端口\" class=\"is-required\">\r\n              <el-input v-model=\"form.port\" :disabled=\"is_edit===true\" placeholder=\"需要设置8001-8999范围内数字，必填\" />\r\n            </el-form-item>\r\n            <el-form-item label=\"开启验证\">\r\n              <el-switch\r\n                v-model=\"form.open_auth\"\r\n                active-value=\"1\"\r\n                inactive-value=\"0\"\r\n              />\r\n            </el-form-item>\r\n\r\n            <el-form-item label=\"IP白名单\">\r\n              <el-input v-model=\"form.white_list\" placeholder=\"格式: 127.0.0.1 多条换行，白名单优先级高于黑名单\" type=\"textarea\" :autosize=\"{ minRows: 2, maxRows: 20}\" />\r\n            </el-form-item>\r\n\r\n            <el-form-item label=\"IP黑名单\">\r\n              <el-input v-model=\"form.black_list\" placeholder=\"格式: 127.0.0.1 多条换行\" type=\"textarea\" :autosize=\"{ minRows: 2, maxRows: 20}\" />\r\n            </el-form-item>\r\n\r\n            <el-form-item label=\"客户端限流\">\r\n              <el-input v-model=\"form.clientip_flow_limit\" placeholder=\"0表示无限制\" />\r\n            </el-form-item>\r\n\r\n            <el-form-item label=\"服务端限流\">\r\n              <el-input v-model=\"form.service_flow_limit\" placeholder=\"0表示无限制\" />\r\n            </el-form-item>\r\n\r\n            <el-form-item label=\"轮询方式\">\r\n              <el-radio v-model=\"form.round_type\" label=\"0\">random</el-radio>\r\n              <el-radio v-model=\"form.round_type\" label=\"1\">round-robin</el-radio>\r\n              <el-radio v-model=\"form.round_type\" label=\"2\">weight_round-robin</el-radio>\r\n              <el-radio v-model=\"form.round_type\" label=\"3\">ip_hash</el-radio>\r\n            </el-form-item>\r\n\r\n            <el-form-item label=\"IP列表\" class=\"is-required\">\r\n              <el-input v-model=\"form.ip_list\" placeholder=\"格式: 127.0.0.1:80 多条换行\" type=\"textarea\" :autosize=\"{ minRows: 2, maxRows: 20}\" />\r\n            </el-form-item>\r\n\r\n            <el-form-item label=\"权重列表\" class=\"is-required\">\r\n              <el-input v-model=\"form.weight_list\" placeholder=\"格式: 50 多条换行\" type=\"textarea\" :autosize=\"{ minRows: 2, maxRows: 20}\" />\r\n            </el-form-item>\r\n\r\n            <el-form-item>\r\n              <el-button type=\"primary\" :loading=\"disableButton\" @click=\"onSubmit\">立即提交</el-button>\r\n            </el-form-item>\r\n          </div>\r\n        </el-card>\r\n      </el-form>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  serviceDetail,\r\n  serviceAddTcp,\r\n  serviceUpdateTcp\r\n} from '@/api/service'\r\nexport default {\r\n  components: { },\r\n  data() {\r\n    return {\r\n      is_edit: false,\r\n      disableButton: false,\r\n      form: {\r\n        id: '0',\r\n        service_name: '',\r\n        service_desc: '',\r\n        port: '',\r\n        rule_type: '0',\r\n        rule: '',\r\n        need_https: '0',\r\n        need_strip_uri: '1',\r\n        need_websocket: '1',\r\n        url_rewrite: '',\r\n        header_transfor: '',\r\n        open_auth: '0',\r\n        black_list: '',\r\n        white_list: '',\r\n        white_host_name: '',\r\n        clientip_flow_limit: '',\r\n        service_flow_limit: '',\r\n        round_type: '2',\r\n        ip_list: '',\r\n        weight_list: '',\r\n        forbid_list: '',\r\n        upstream_connect_timeout: '',\r\n        upstream_header_timeout: '',\r\n        upstream_idle_timeout: '',\r\n        upstream_max_idle: ''\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    const id = this.$route.params && this.$route.params.id\r\n    if (id > 0) {\r\n      this.is_edit = true\r\n      this.fetchData(id)\r\n    }\r\n    this.tempRoute = Object.assign({}, this.$route)\r\n  },\r\n  methods: {\r\n    fetchData(id) {\r\n      this.listLoading = true\r\n      const query = {\r\n        id: id\r\n      }\r\n      serviceDetail(query).then(response => {\r\n        const formData = response.data\r\n\r\n        this.form.id = formData.info.id\r\n        this.form.service_name = formData.info.service_name\r\n        this.form.service_desc = formData.info.service_desc\r\n\r\n        this.form.port = formData.tcp_rule.port.toString()\r\n\r\n        this.form.rule_type = formData.http_rule.rule_type.toString()\r\n        this.form.rule = formData.http_rule.rule\r\n        this.form.need_https = formData.http_rule.need_https.toString()\r\n        this.form.need_strip_uri = formData.http_rule.need_strip_uri.toString()\r\n        this.form.need_websocket = formData.http_rule.need_websocket.toString()\r\n        this.form.url_rewrite = formData.http_rule.url_rewrite.replace(/,/g, '\\n')\r\n        this.form.header_transfor = formData.http_rule.header_transfor.replace(/,/g, '\\n')\r\n\r\n        this.form.open_auth = formData.access_control.open_auth.toString()\r\n        this.form.black_list = formData.access_control.black_list.replace(/,/g, '\\n')\r\n        this.form.white_list = formData.access_control.white_list.replace(/,/g, '\\n')\r\n        this.form.white_host_name = formData.access_control.white_host_name.replace(/,/g, '\\n')\r\n        this.form.clientip_flow_limit = formData.access_control.clientip_flow_limit\r\n        this.form.service_flow_limit = formData.access_control.service_flow_limit\r\n\r\n        this.form.round_type = formData.load_balance.round_type.toString()\r\n        this.form.ip_list = formData.load_balance.ip_list.replace(/,/g, '\\n')\r\n        this.form.weight_list = formData.load_balance.weight_list.replace(/,/g, '\\n')\r\n        this.form.forbid_list = formData.load_balance.forbid_list.replace(/,/g, '\\n')\r\n\r\n        this.form.upstream_connect_timeout = formData.load_balance.upstream_connect_timeout\r\n        this.form.upstream_header_timeout = formData.load_balance.upstream_header_timeout\r\n        this.form.upstream_idle_timeout = formData.load_balance.upstream_idle_timeout\r\n        this.form.upstream_max_idle = formData.load_balance.upstream_max_idle\r\n\r\n        this.listLoading = false\r\n      })\r\n    },\r\n    onSubmit() {\r\n      this.disableButton = true\r\n      const formData = Object.assign({}, this.form)\r\n      formData.port = Number(formData.port)\r\n      formData.rule_type = Number(formData.rule_type)\r\n      formData.need_https = Number(formData.need_https)\r\n      formData.need_strip_uri = Number(formData.need_strip_uri)\r\n      formData.need_websocket = Number(formData.need_websocket)\r\n      formData.open_auth = Number(formData.open_auth)\r\n      formData.round_type = Number(formData.round_type)\r\n      formData.clientip_flow_limit = Number(formData.clientip_flow_limit)\r\n      formData.service_flow_limit = Number(formData.service_flow_limit)\r\n      formData.upstream_connect_timeout = Number(formData.upstream_connect_timeout)\r\n      formData.upstream_header_timeout = Number(formData.upstream_header_timeout)\r\n      formData.upstream_idle_timeout = Number(formData.upstream_idle_timeout)\r\n      formData.upstream_max_idle = Number(formData.upstream_max_idle)\r\n\r\n      formData.ip_list = formData.ip_list.replace(/\\n/g, ',')\r\n      formData.weight_list = formData.weight_list.replace(/\\n/g, ',')\r\n      formData.forbid_list = formData.forbid_list.replace(/\\n/g, ',')\r\n      formData.white_host_name = formData.white_host_name.replace(/\\n/g, ',')\r\n      formData.white_list = formData.white_list.replace(/\\n/g, ',')\r\n      formData.black_list = formData.black_list.replace(/\\n/g, ',')\r\n      formData.header_transfor = formData.header_transfor.replace(/\\n/g, ',')\r\n      formData.url_rewrite = formData.url_rewrite.replace(/\\n/g, ',')\r\n\r\n      if (this.is_edit) {\r\n        serviceUpdateTcp(formData).then(() => {\r\n          this.disableButton = false\r\n          this.$notify({\r\n            title: 'Success',\r\n            message: 'Submit Successfully',\r\n            type: 'success',\r\n            duration: 500\r\n          })\r\n        }, () => {\r\n          this.disableButton = false\r\n        })\r\n      } else {\r\n        serviceAddTcp(formData).then(() => {\r\n          this.disableButton = false\r\n          this.$notify({\r\n            title: 'Success',\r\n            message: 'Submit Successfully',\r\n            type: 'success',\r\n            duration: 500\r\n          })\r\n        }, () => {\r\n          this.disableButton = false\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.mixin-components-container {\r\n  background-color: #f0f2f5;\r\n  padding: 30px;\r\n  min-height: calc(100vh - 84px);\r\n}\r\n.component-item{\r\n  min-height: 100px;\r\n}\r\n.el-select .el-input {\r\n    width: 130px;\r\n  }\r\n  .input-with-select .el-input-group__prepend {\r\n    background-color: #fff;\r\n  }\r\n</style>\r\n\r\n"]}]}