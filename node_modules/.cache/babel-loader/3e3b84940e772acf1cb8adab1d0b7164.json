{"remainingRequest":"E:\\Language\\Go\\Project\\Test\\test\\go_gateway_view\\node_modules\\babel-loader\\lib\\index.js!E:\\Language\\Go\\Project\\Test\\test\\go_gateway_view\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\Language\\Go\\Project\\Test\\test\\go_gateway_view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Language\\Go\\Project\\Test\\test\\go_gateway_view\\src\\components\\Breadcrumb\\index.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\Language\\Go\\Project\\Test\\test\\go_gateway_view\\src\\components\\Breadcrumb\\index.vue","mtime":1725789930744},{"path":"E:\\Language\\Go\\Project\\Test\\test\\go_gateway_view\\babel.config.js","mtime":1725789930622},{"path":"E:\\Language\\Go\\Project\\Test\\test\\go_gateway_view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Language\\Go\\Project\\Test\\test\\go_gateway_view\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\Language\\Go\\Project\\Test\\test\\go_gateway_view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Language\\Go\\Project\\Test\\test\\go_gateway_view\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"E:/Language/Go/Project/Test/test/go_gateway_view/node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es6.function.name\");\nrequire(\"core-js/modules/es6.string.starts-with\");\nvar _pathToRegexp = _interopRequireDefault(require(\"path-to-regexp\"));\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = exports.default = {\n  data: function data() {\n    return {\n      levelList: null\n    };\n  },\n  watch: {\n    $route: function $route(route) {\n      // if you go to the redirect page, do not update the breadcrumbs\n      if (route.path.startsWith('/redirect/')) {\n        return;\n      }\n      this.getBreadcrumb();\n    }\n  },\n  created: function created() {\n    this.getBreadcrumb();\n  },\n  methods: {\n    getBreadcrumb: function getBreadcrumb() {\n      // only show routes with meta.title\n      var matched = this.$route.matched.filter(function (item) {\n        return item.meta && item.meta.title;\n      });\n      var first = matched[0];\n      if (!this.isDashboard(first)) {\n        matched = [{\n          path: '/dashboard',\n          meta: {\n            title: 'Dashboard'\n          }\n        }].concat(matched);\n      }\n      this.levelList = matched.filter(function (item) {\n        return item.meta && item.meta.title && item.meta.breadcrumb !== false;\n      });\n    },\n    isDashboard: function isDashboard(route) {\n      var name = route && route.name;\n      if (!name) {\n        return false;\n      }\n      return name.trim().toLocaleLowerCase() === 'Dashboard'.toLocaleLowerCase();\n    },\n    pathCompile: function pathCompile(path) {\n      // To solve this problem https://github.com/PanJiaChen/vue-element-admin/issues/561\n      var params = this.$route.params;\n      var toPath = _pathToRegexp.default.compile(path);\n      return toPath(params);\n    },\n    handleLink: function handleLink(item) {\n      var redirect = item.redirect,\n        path = item.path;\n      if (redirect) {\n        this.$router.push(redirect);\n        return;\n      }\n      this.$router.push(this.pathCompile(path));\n    }\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;AAYA,IAAA,aAAA,GAAA,sBAAA,CAAA,OAAA;;;;;;;;;;;;iCAEA;EACA,IAAA,WAAA,IAAA,CAAA,EAAA;IACA,OAAA;MACA,SAAA,EAAA;IACA,CAAA;EACA,CAAA;EACA,KAAA,EAAA;IACA,MAAA,WAAA,MAAA,CAAA,KAAA,EAAA;MACA;MACA,IAAA,KAAA,CAAA,IAAA,CAAA,UAAA,CAAA,YAAA,CAAA,EAAA;QACA;MACA;MACA,IAAA,CAAA,aAAA,CAAA,CAAA;IACA;EACA,CAAA;EACA,OAAA,WAAA,OAAA,CAAA,EAAA;IACA,IAAA,CAAA,aAAA,CAAA,CAAA;EACA,CAAA;EACA,OAAA,EAAA;IACA,aAAA,WAAA,aAAA,CAAA,EAAA;MACA;MACA,IAAA,OAAA,GAAA,IAAA,CAAA,MAAA,CAAA,OAAA,CAAA,MAAA,CAAA,UAAA,IAAA;QAAA,OAAA,IAAA,CAAA,IAAA,IAAA,IAAA,CAAA,IAAA,CAAA,KAAA;MAAA,EAAA;MACA,IAAA,KAAA,GAAA,OAAA,CAAA,CAAA,CAAA;MAEA,IAAA,CAAA,IAAA,CAAA,WAAA,CAAA,KAAA,CAAA,EAAA;QACA,OAAA,GAAA,CAAA;UAAA,IAAA,EAAA,YAAA;UAAA,IAAA,EAAA;YAAA,KAAA,EAAA;UAAA;QAAA,CAAA,CAAA,CAAA,MAAA,CAAA,OAAA,CAAA;MACA;MAEA,IAAA,CAAA,SAAA,GAAA,OAAA,CAAA,MAAA,CAAA,UAAA,IAAA;QAAA,OAAA,IAAA,CAAA,IAAA,IAAA,IAAA,CAAA,IAAA,CAAA,KAAA,IAAA,IAAA,CAAA,IAAA,CAAA,UAAA,KAAA,KAAA;MAAA,EAAA;IACA,CAAA;IACA,WAAA,WAAA,WAAA,CAAA,KAAA,EAAA;MACA,IAAA,IAAA,GAAA,KAAA,IAAA,KAAA,CAAA,IAAA;MACA,IAAA,CAAA,IAAA,EAAA;QACA,OAAA,KAAA;MACA;MACA,OAAA,IAAA,CAAA,IAAA,CAAA,CAAA,CAAA,iBAAA,CAAA,CAAA,KAAA,WAAA,CAAA,iBAAA,CAAA,CAAA;IACA,CAAA;IACA,WAAA,WAAA,WAAA,CAAA,IAAA,EAAA;MACA;MACA,IAAA,MAAA,GAAA,IAAA,CAAA,MAAA,CAAA,MAAA;MACA,IAAA,MAAA,GAAA,qBAAA,CAAA,OAAA,CAAA,IAAA,CAAA;MACA,OAAA,MAAA,CAAA,MAAA,CAAA;IACA,CAAA;IACA,UAAA,WAAA,UAAA,CAAA,IAAA,EAAA;MACA,IAAA,QAAA,GAAA,IAAA,CAAA,QAAA;QAAA,IAAA,GAAA,IAAA,CAAA,IAAA;MACA,IAAA,QAAA,EAAA;QACA,IAAA,CAAA,OAAA,CAAA,IAAA,CAAA,QAAA,CAAA;QACA;MACA;MACA,IAAA,CAAA,OAAA,CAAA,IAAA,CAAA,IAAA,CAAA,WAAA,CAAA,IAAA,CAAA,CAAA;IACA;EACA;AACA,CAAA","sourcesContent":["<template>\r\n  <el-breadcrumb class=\"app-breadcrumb\" separator=\"/\">\r\n    <transition-group name=\"breadcrumb\">\r\n      <el-breadcrumb-item v-for=\"(item,index) in levelList\" :key=\"item.path\">\r\n        <span v-if=\"item.redirect==='noRedirect'||index==levelList.length-1\" class=\"no-redirect\">{{ item.meta.title }}</span>\r\n        <a v-else @click.prevent=\"handleLink(item)\">{{ item.meta.title }}</a>\r\n      </el-breadcrumb-item>\r\n    </transition-group>\r\n  </el-breadcrumb>\r\n</template>\r\n\r\n<script>\r\nimport pathToRegexp from 'path-to-regexp'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      levelList: null\r\n    }\r\n  },\r\n  watch: {\r\n    $route(route) {\r\n      // if you go to the redirect page, do not update the breadcrumbs\r\n      if (route.path.startsWith('/redirect/')) {\r\n        return\r\n      }\r\n      this.getBreadcrumb()\r\n    }\r\n  },\r\n  created() {\r\n    this.getBreadcrumb()\r\n  },\r\n  methods: {\r\n    getBreadcrumb() {\r\n      // only show routes with meta.title\r\n      let matched = this.$route.matched.filter(item => item.meta && item.meta.title)\r\n      const first = matched[0]\r\n\r\n      if (!this.isDashboard(first)) {\r\n        matched = [{ path: '/dashboard', meta: { title: 'Dashboard' }}].concat(matched)\r\n      }\r\n\r\n      this.levelList = matched.filter(item => item.meta && item.meta.title && item.meta.breadcrumb !== false)\r\n    },\r\n    isDashboard(route) {\r\n      const name = route && route.name\r\n      if (!name) {\r\n        return false\r\n      }\r\n      return name.trim().toLocaleLowerCase() === 'Dashboard'.toLocaleLowerCase()\r\n    },\r\n    pathCompile(path) {\r\n      // To solve this problem https://github.com/PanJiaChen/vue-element-admin/issues/561\r\n      const { params } = this.$route\r\n      var toPath = pathToRegexp.compile(path)\r\n      return toPath(params)\r\n    },\r\n    handleLink(item) {\r\n      const { redirect, path } = item\r\n      if (redirect) {\r\n        this.$router.push(redirect)\r\n        return\r\n      }\r\n      this.$router.push(this.pathCompile(path))\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.app-breadcrumb.el-breadcrumb {\r\n  display: inline-block;\r\n  font-size: 14px;\r\n  line-height: 50px;\r\n  margin-left: 8px;\r\n\r\n  .no-redirect {\r\n    color: #97a8be;\r\n    cursor: text;\r\n  }\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/Breadcrumb"}]}