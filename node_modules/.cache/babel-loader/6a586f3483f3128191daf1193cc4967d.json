{"remainingRequest":"E:\\Language\\Go\\Project\\Test\\Gateway\\FrontGateway\\node_modules\\babel-loader\\lib\\index.js!E:\\Language\\Go\\Project\\Test\\Gateway\\FrontGateway\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\Language\\Go\\Project\\Test\\Gateway\\FrontGateway\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Language\\Go\\Project\\Test\\Gateway\\FrontGateway\\src\\components\\SizeSelect\\index.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\Language\\Go\\Project\\Test\\Gateway\\FrontGateway\\src\\components\\SizeSelect\\index.vue","mtime":1725789930780},{"path":"E:\\Language\\Go\\Project\\Test\\Gateway\\FrontGateway\\babel.config.js","mtime":1725789930622},{"path":"E:\\Language\\Go\\Project\\Test\\Gateway\\FrontGateway\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Language\\Go\\Project\\Test\\Gateway\\FrontGateway\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\Language\\Go\\Project\\Test\\Gateway\\FrontGateway\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Language\\Go\\Project\\Test\\Gateway\\FrontGateway\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es6.regexp.replace\");\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = exports.default = {\n  data: function data() {\n    return {\n      sizeOptions: [{\n        label: 'Default',\n        value: 'default'\n      }, {\n        label: 'Medium',\n        value: 'medium'\n      }, {\n        label: 'Small',\n        value: 'small'\n      }, {\n        label: 'Mini',\n        value: 'mini'\n      }]\n    };\n  },\n  computed: {\n    size: function size() {\n      return this.$store.getters.size;\n    }\n  },\n  methods: {\n    handleSetSize: function handleSetSize(size) {\n      this.$ELEMENT.size = size;\n      this.$store.dispatch('app/setSize', size);\n      this.refreshView();\n      this.$message({\n        message: 'Switch Size Success',\n        type: 'success'\n      });\n    },\n    refreshView: function refreshView() {\n      var _this = this;\n      // In order to make the cached page re-rendered\n      this.$store.dispatch('tagsView/delAllCachedViews', this.$route);\n      var fullPath = this.$route.fullPath;\n      this.$nextTick(function () {\n        _this.$router.replace({\n          path: '/redirect' + fullPath\n        });\n      });\n    }\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;iCAeA;EACA,IAAA,WAAA,IAAA,CAAA,EAAA;IACA,OAAA;MACA,WAAA,EAAA,CACA;QAAA,KAAA,EAAA,SAAA;QAAA,KAAA,EAAA;MAAA,CAAA,EACA;QAAA,KAAA,EAAA,QAAA;QAAA,KAAA,EAAA;MAAA,CAAA,EACA;QAAA,KAAA,EAAA,OAAA;QAAA,KAAA,EAAA;MAAA,CAAA,EACA;QAAA,KAAA,EAAA,MAAA;QAAA,KAAA,EAAA;MAAA,CAAA;IAEA,CAAA;EACA,CAAA;EACA,QAAA,EAAA;IACA,IAAA,WAAA,IAAA,CAAA,EAAA;MACA,OAAA,IAAA,CAAA,MAAA,CAAA,OAAA,CAAA,IAAA;IACA;EACA,CAAA;EACA,OAAA,EAAA;IACA,aAAA,WAAA,aAAA,CAAA,IAAA,EAAA;MACA,IAAA,CAAA,QAAA,CAAA,IAAA,GAAA,IAAA;MACA,IAAA,CAAA,MAAA,CAAA,QAAA,CAAA,aAAA,EAAA,IAAA,CAAA;MACA,IAAA,CAAA,WAAA,CAAA,CAAA;MACA,IAAA,CAAA,QAAA,CAAA;QACA,OAAA,EAAA,qBAAA;QACA,IAAA,EAAA;MACA,CAAA,CAAA;IACA,CAAA;IACA,WAAA,WAAA,WAAA,CAAA,EAAA;MAAA,IAAA,KAAA;MACA;MACA,IAAA,CAAA,MAAA,CAAA,QAAA,CAAA,4BAAA,EAAA,IAAA,CAAA,MAAA,CAAA;MAEA,IAAA,QAAA,GAAA,IAAA,CAAA,MAAA,CAAA,QAAA;MAEA,IAAA,CAAA,SAAA,CAAA,YAAA;QACA,KAAA,CAAA,OAAA,CAAA,OAAA,CAAA;UACA,IAAA,EAAA,WAAA,GAAA;QACA,CAAA,CAAA;MACA,CAAA,CAAA;IACA;EACA;AAEA,CAAA","sourcesContent":["<template>\r\n  <el-dropdown trigger=\"click\" @command=\"handleSetSize\">\r\n    <div>\r\n      <svg-icon class-name=\"size-icon\" icon-class=\"size\" />\r\n    </div>\r\n    <el-dropdown-menu slot=\"dropdown\">\r\n      <el-dropdown-item v-for=\"item of sizeOptions\" :key=\"item.value\" :disabled=\"size===item.value\" :command=\"item.value\">\r\n        {{\r\n          item.label }}\r\n      </el-dropdown-item>\r\n    </el-dropdown-menu>\r\n  </el-dropdown>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      sizeOptions: [\r\n        { label: 'Default', value: 'default' },\r\n        { label: 'Medium', value: 'medium' },\r\n        { label: 'Small', value: 'small' },\r\n        { label: 'Mini', value: 'mini' }\r\n      ]\r\n    }\r\n  },\r\n  computed: {\r\n    size() {\r\n      return this.$store.getters.size\r\n    }\r\n  },\r\n  methods: {\r\n    handleSetSize(size) {\r\n      this.$ELEMENT.size = size\r\n      this.$store.dispatch('app/setSize', size)\r\n      this.refreshView()\r\n      this.$message({\r\n        message: 'Switch Size Success',\r\n        type: 'success'\r\n      })\r\n    },\r\n    refreshView() {\r\n      // In order to make the cached page re-rendered\r\n      this.$store.dispatch('tagsView/delAllCachedViews', this.$route)\r\n\r\n      const { fullPath } = this.$route\r\n\r\n      this.$nextTick(() => {\r\n        this.$router.replace({\r\n          path: '/redirect' + fullPath\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n}\r\n</script>\r\n"],"sourceRoot":"src/components/SizeSelect"}]}