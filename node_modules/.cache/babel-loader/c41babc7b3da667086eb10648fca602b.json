{"remainingRequest":"E:\\Language\\Go\\Project\\Test\\Gateway\\FrontGateway\\node_modules\\babel-loader\\lib\\index.js!E:\\Language\\Go\\Project\\Test\\Gateway\\FrontGateway\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\Language\\Go\\Project\\Test\\Gateway\\FrontGateway\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Language\\Go\\Project\\Test\\Gateway\\FrontGateway\\src\\components\\Charts\\LineStat.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\Language\\Go\\Project\\Test\\Gateway\\FrontGateway\\src\\components\\Charts\\LineStat.vue","mtime":1725789930746},{"path":"E:\\Language\\Go\\Project\\Test\\Gateway\\FrontGateway\\babel.config.js","mtime":1725789930622},{"path":"E:\\Language\\Go\\Project\\Test\\Gateway\\FrontGateway\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Language\\Go\\Project\\Test\\Gateway\\FrontGateway\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\Language\\Go\\Project\\Test\\Gateway\\FrontGateway\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Language\\Go\\Project\\Test\\Gateway\\FrontGateway\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"E:/Language/Go/Project/Test/Gateway/FrontGateway/node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _echarts = _interopRequireDefault(require(\"echarts\"));\nvar _resize = _interopRequireDefault(require(\"./mixins/resize\"));\n//\n//\n//\n//\nvar _default2 = exports.default = {\n  mixins: [_resize.default],\n  props: {\n    data: {\n      type: Object,\n      default: function _default() {\n        return {\n          'title': '服务流量统计',\n          'today': [220, 182, 191, 134, 150, 120, 110, 125, 145, 122, 165, 122],\n          'yesterday': [120, 110, 125, 145, 122, 165, 122, 220, 182, 191, 134, 150]\n        };\n      }\n    },\n    className: {\n      type: String,\n      default: 'chart'\n    },\n    id: {\n      type: String,\n      default: 'chart'\n    },\n    width: {\n      type: String,\n      default: '200px'\n    },\n    height: {\n      type: String,\n      default: '200px'\n    }\n  },\n  data: function data() {\n    return {\n      chart: null\n    };\n  },\n  watch: {\n    data: {\n      handler: function handler(newData, oldData) {\n        // console.log(newData)\n        // console.log(oldData)\n        this.initChart();\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.initChart();\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (!this.chart) {\n      return;\n    }\n    this.chart.dispose();\n    this.chart = null;\n  },\n  methods: {\n    initChart: function initChart() {\n      this.chart = _echarts.default.init(document.getElementById(this.id));\n      this.chart.setOption({\n        backgroundColor: '#394056',\n        title: {\n          top: 20,\n          text: this.data.title,\n          textStyle: {\n            fontWeight: 'normal',\n            fontSize: 16,\n            color: '#F1F1F3'\n          },\n          left: '1%'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            lineStyle: {\n              color: '#57617B'\n            }\n          }\n        },\n        legend: {\n          top: 20,\n          icon: 'rect',\n          itemWidth: 14,\n          itemHeight: 5,\n          itemGap: 13,\n          data: ['今日', '昨日'],\n          right: '4%',\n          textStyle: {\n            fontSize: 12,\n            color: '#F1F1F3'\n          }\n        },\n        grid: {\n          top: 100,\n          left: '2%',\n          right: '2%',\n          bottom: '2%',\n          containLabel: true\n        },\n        xAxis: [{\n          type: 'category',\n          boundaryGap: false,\n          axisLine: {\n            lineStyle: {\n              color: '#57617B'\n            }\n          },\n          data: ['00:00', '01:00', '02:00', '03:00', '04:00', '05:00', '06:00', '07:00', '08:00', '09:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00', '18:00', '19:00', '20:00', '21:00', '22:00', '23:00']\n        }],\n        yAxis: [{\n          type: 'value',\n          name: 'pv',\n          axisTick: {\n            show: false\n          },\n          axisLine: {\n            lineStyle: {\n              color: '#57617B'\n            }\n          },\n          axisLabel: {\n            margin: 10,\n            textStyle: {\n              fontSize: 14\n            }\n          },\n          splitLine: {\n            lineStyle: {\n              color: '#57617B'\n            }\n          }\n        }],\n        series: [{\n          name: '今日',\n          type: 'line',\n          smooth: true,\n          symbol: 'circle',\n          symbolSize: 5,\n          showSymbol: false,\n          lineStyle: {\n            normal: {\n              width: 1\n            }\n          },\n          areaStyle: {\n            normal: {\n              color: new _echarts.default.graphic.LinearGradient(0, 0, 0, 1, [{\n                offset: 0,\n                color: 'rgba(137, 189, 27, 0.3)'\n              }, {\n                offset: 0.8,\n                color: 'rgba(137, 189, 27, 0)'\n              }], false),\n              shadowColor: 'rgba(0, 0, 0, 0.1)',\n              shadowBlur: 10\n            }\n          },\n          itemStyle: {\n            normal: {\n              color: 'rgb(137,189,27)',\n              borderColor: 'rgba(137,189,2,0.27)',\n              borderWidth: 12\n            }\n          },\n          data: this.data.today\n        }, {\n          name: '昨日',\n          type: 'line',\n          smooth: true,\n          symbol: 'circle',\n          symbolSize: 5,\n          showSymbol: false,\n          lineStyle: {\n            normal: {\n              width: 1\n            }\n          },\n          areaStyle: {\n            normal: {\n              color: new _echarts.default.graphic.LinearGradient(0, 0, 0, 1, [{\n                offset: 0,\n                color: 'rgba(0, 136, 212, 0.3)'\n              }, {\n                offset: 0.8,\n                color: 'rgba(0, 136, 212, 0)'\n              }], false),\n              shadowColor: 'rgba(0, 0, 0, 0.1)',\n              shadowBlur: 10\n            }\n          },\n          itemStyle: {\n            normal: {\n              color: 'rgb(0,136,212)',\n              borderColor: 'rgba(0,136,212,0.2)',\n              borderWidth: 12\n            }\n          },\n          data: this.data.yesterday\n        }]\n      });\n    }\n  }\n};",{"version":3,"sources":["LineStat.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div :id=\"id\" :class=\"className\" :style=\"{height:height,width:width}\" />\r\n</template>\r\n\r\n<script>\r\nimport echarts from 'echarts'\r\nimport resize from './mixins/resize'\r\n\r\nexport default {\r\n  mixins: [resize],\r\n  props: {\r\n    data: {\r\n      type: Object,\r\n      default() {\r\n        return {\r\n          'title': '服务流量统计',\r\n          'today': [220, 182, 191, 134, 150, 120, 110, 125, 145, 122, 165, 122],\r\n          'yesterday': [120, 110, 125, 145, 122, 165, 122, 220, 182, 191, 134, 150]\r\n        }\r\n      }\r\n    },\r\n    className: {\r\n      type: String,\r\n      default: 'chart'\r\n    },\r\n    id: {\r\n      type: String,\r\n      default: 'chart'\r\n    },\r\n    width: {\r\n      type: String,\r\n      default: '200px'\r\n    },\r\n    height: {\r\n      type: String,\r\n      default: '200px'\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      chart: null\r\n    }\r\n  },\r\n  watch: {\r\n    data: {\r\n      handler: function(newData, oldData) {\r\n        // console.log(newData)\r\n        // console.log(oldData)\r\n        this.initChart()\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initChart()\r\n  },\r\n  beforeDestroy() {\r\n    if (!this.chart) {\r\n      return\r\n    }\r\n    this.chart.dispose()\r\n    this.chart = null\r\n  },\r\n  methods: {\r\n    initChart() {\r\n      this.chart = echarts.init(document.getElementById(this.id))\r\n\r\n      this.chart.setOption({\r\n        backgroundColor: '#394056',\r\n        title: {\r\n          top: 20,\r\n          text: this.data.title,\r\n          textStyle: {\r\n            fontWeight: 'normal',\r\n            fontSize: 16,\r\n            color: '#F1F1F3'\r\n          },\r\n          left: '1%'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            lineStyle: {\r\n              color: '#57617B'\r\n            }\r\n          }\r\n        },\r\n        legend: {\r\n          top: 20,\r\n          icon: 'rect',\r\n          itemWidth: 14,\r\n          itemHeight: 5,\r\n          itemGap: 13,\r\n          data: ['今日', '昨日'],\r\n          right: '4%',\r\n          textStyle: {\r\n            fontSize: 12,\r\n            color: '#F1F1F3'\r\n          }\r\n        },\r\n        grid: {\r\n          top: 100,\r\n          left: '2%',\r\n          right: '2%',\r\n          bottom: '2%',\r\n          containLabel: true\r\n        },\r\n        xAxis: [{\r\n          type: 'category',\r\n          boundaryGap: false,\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: '#57617B'\r\n            }\r\n          },\r\n          data: ['00:00', '01:00', '02:00', '03:00', '04:00', '05:00', '06:00', '07:00', '08:00', '09:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00', '18:00', '19:00', '20:00', '21:00', '22:00', '23:00']\r\n        }],\r\n        yAxis: [{\r\n          type: 'value',\r\n          name: 'pv',\r\n          axisTick: {\r\n            show: false\r\n          },\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: '#57617B'\r\n            }\r\n          },\r\n          axisLabel: {\r\n            margin: 10,\r\n            textStyle: {\r\n              fontSize: 14\r\n            }\r\n          },\r\n          splitLine: {\r\n            lineStyle: {\r\n              color: '#57617B'\r\n            }\r\n          }\r\n        }],\r\n        series: [{\r\n          name: '今日',\r\n          type: 'line',\r\n          smooth: true,\r\n          symbol: 'circle',\r\n          symbolSize: 5,\r\n          showSymbol: false,\r\n          lineStyle: {\r\n            normal: {\r\n              width: 1\r\n            }\r\n          },\r\n          areaStyle: {\r\n            normal: {\r\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                offset: 0,\r\n                color: 'rgba(137, 189, 27, 0.3)'\r\n              }, {\r\n                offset: 0.8,\r\n                color: 'rgba(137, 189, 27, 0)'\r\n              }], false),\r\n              shadowColor: 'rgba(0, 0, 0, 0.1)',\r\n              shadowBlur: 10\r\n            }\r\n          },\r\n          itemStyle: {\r\n            normal: {\r\n              color: 'rgb(137,189,27)',\r\n              borderColor: 'rgba(137,189,2,0.27)',\r\n              borderWidth: 12\r\n\r\n            }\r\n          },\r\n          data: this.data.today\r\n        }, {\r\n          name: '昨日',\r\n          type: 'line',\r\n          smooth: true,\r\n          symbol: 'circle',\r\n          symbolSize: 5,\r\n          showSymbol: false,\r\n          lineStyle: {\r\n            normal: {\r\n              width: 1\r\n            }\r\n          },\r\n          areaStyle: {\r\n            normal: {\r\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                offset: 0,\r\n                color: 'rgba(0, 136, 212, 0.3)'\r\n              }, {\r\n                offset: 0.8,\r\n                color: 'rgba(0, 136, 212, 0)'\r\n              }], false),\r\n              shadowColor: 'rgba(0, 0, 0, 0.1)',\r\n              shadowBlur: 10\r\n            }\r\n          },\r\n          itemStyle: {\r\n            normal: {\r\n              color: 'rgb(0,136,212)',\r\n              borderColor: 'rgba(0,136,212,0.2)',\r\n              borderWidth: 12\r\n\r\n            }\r\n          },\r\n          data: this.data.yesterday\r\n        }]\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":"src/components/Charts"}]}