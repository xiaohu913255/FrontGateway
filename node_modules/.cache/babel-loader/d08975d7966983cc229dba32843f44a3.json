{"remainingRequest":"E:\\Language\\Go\\Project\\Test\\Gateway\\FrontGateway\\node_modules\\babel-loader\\lib\\index.js!E:\\Language\\Go\\Project\\Test\\Gateway\\FrontGateway\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\Language\\Go\\Project\\Test\\Gateway\\FrontGateway\\src\\store\\modules\\permission.js","dependencies":[{"path":"E:\\Language\\Go\\Project\\Test\\Gateway\\FrontGateway\\src\\store\\modules\\permission.js","mtime":1725789930879},{"path":"E:\\Language\\Go\\Project\\Test\\Gateway\\FrontGateway\\babel.config.js","mtime":1725789930622},{"path":"E:\\Language\\Go\\Project\\Test\\Gateway\\FrontGateway\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Language\\Go\\Project\\Test\\Gateway\\FrontGateway\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\Language\\Go\\Project\\Test\\Gateway\\FrontGateway\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"E:/Language/Go/Project/Test/Gateway/FrontGateway/node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.filterAsyncRoutes = filterAsyncRoutes;\nvar _objectSpread2 = _interopRequireDefault(require(\"E:/Language/Go/Project/Test/Gateway/FrontGateway/node_modules/@babel/runtime/helpers/objectSpread2.js\"));\nrequire(\"core-js/modules/web.dom.iterable\");\nrequire(\"core-js/modules/es7.array.includes\");\nrequire(\"core-js/modules/es6.string.includes\");\nvar _router = require(\"@/router\");\n/**\r\n * Use meta.role to determine if the current user has permission\r\n * @param roles\r\n * @param route\r\n */\nfunction hasPermission(roles, route) {\n  if (route.meta && route.meta.roles) {\n    return roles.some(function (role) {\n      return route.meta.roles.includes(role);\n    });\n  } else {\n    return true;\n  }\n}\n\n/**\r\n * Filter asynchronous routing tables by recursion\r\n * @param routes asyncRoutes\r\n * @param roles\r\n */\nfunction filterAsyncRoutes(routes, roles) {\n  var res = [];\n  routes.forEach(function (route) {\n    var tmp = (0, _objectSpread2.default)({}, route);\n    if (hasPermission(roles, tmp)) {\n      if (tmp.children) {\n        tmp.children = filterAsyncRoutes(tmp.children, roles);\n      }\n      res.push(tmp);\n    }\n  });\n  return res;\n}\nvar state = {\n  routes: [],\n  addRoutes: []\n};\nvar mutations = {\n  SET_ROUTES: function SET_ROUTES(state, routes) {\n    state.addRoutes = routes;\n    state.routes = _router.constantRoutes.concat(routes);\n  }\n};\nvar actions = {\n  generateRoutes: function generateRoutes(_ref, roles) {\n    var commit = _ref.commit;\n    return new Promise(function (resolve) {\n      var accessedRoutes;\n      if (roles.includes('admin')) {\n        accessedRoutes = _router.asyncRoutes || [];\n      } else {\n        accessedRoutes = filterAsyncRoutes(_router.asyncRoutes, roles);\n      }\n      commit('SET_ROUTES', accessedRoutes);\n      resolve(accessedRoutes);\n    });\n  }\n};\nvar _default = exports.default = {\n  namespaced: true,\n  state: state,\n  mutations: mutations,\n  actions: actions\n};",{"version":3,"names":["_router","require","hasPermission","roles","route","meta","some","role","includes","filterAsyncRoutes","routes","res","forEach","tmp","_objectSpread2","default","children","push","state","addRoutes","mutations","SET_ROUTES","constantRoutes","concat","actions","generateRoutes","_ref","commit","Promise","resolve","accessedRoutes","asyncRoutes","_default","exports","namespaced"],"sources":["E:/Language/Go/Project/Test/Gateway/FrontGateway/src/store/modules/permission.js"],"sourcesContent":["import { asyncRoutes, constantRoutes } from '@/router'\r\n\r\n/**\r\n * Use meta.role to determine if the current user has permission\r\n * @param roles\r\n * @param route\r\n */\r\nfunction hasPermission(roles, route) {\r\n  if (route.meta && route.meta.roles) {\r\n    return roles.some(role => route.meta.roles.includes(role))\r\n  } else {\r\n    return true\r\n  }\r\n}\r\n\r\n/**\r\n * Filter asynchronous routing tables by recursion\r\n * @param routes asyncRoutes\r\n * @param roles\r\n */\r\nexport function filterAsyncRoutes(routes, roles) {\r\n  const res = []\r\n\r\n  routes.forEach(route => {\r\n    const tmp = { ...route }\r\n    if (hasPermission(roles, tmp)) {\r\n      if (tmp.children) {\r\n        tmp.children = filterAsyncRoutes(tmp.children, roles)\r\n      }\r\n      res.push(tmp)\r\n    }\r\n  })\r\n\r\n  return res\r\n}\r\n\r\nconst state = {\r\n  routes: [],\r\n  addRoutes: []\r\n}\r\n\r\nconst mutations = {\r\n  SET_ROUTES: (state, routes) => {\r\n    state.addRoutes = routes\r\n    state.routes = constantRoutes.concat(routes)\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  generateRoutes({ commit }, roles) {\r\n    return new Promise(resolve => {\r\n      let accessedRoutes\r\n      if (roles.includes('admin')) {\r\n        accessedRoutes = asyncRoutes || []\r\n      } else {\r\n        accessedRoutes = filterAsyncRoutes(asyncRoutes, roles)\r\n      }\r\n      commit('SET_ROUTES', accessedRoutes)\r\n      resolve(accessedRoutes)\r\n    })\r\n  }\r\n}\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  mutations,\r\n  actions\r\n}\r\n"],"mappings":";;;;;;;;;;;;AAAA,IAAAA,OAAA,GAAAC,OAAA;AAEA;AACA;AACA;AACA;AACA;AACA,SAASC,aAAaA,CAACC,KAAK,EAAEC,KAAK,EAAE;EACnC,IAAIA,KAAK,CAACC,IAAI,IAAID,KAAK,CAACC,IAAI,CAACF,KAAK,EAAE;IAClC,OAAOA,KAAK,CAACG,IAAI,CAAC,UAAAC,IAAI;MAAA,OAAIH,KAAK,CAACC,IAAI,CAACF,KAAK,CAACK,QAAQ,CAACD,IAAI,CAAC;IAAA,EAAC;EAC5D,CAAC,MAAM;IACL,OAAO,IAAI;EACb;AACF;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASE,iBAAiBA,CAACC,MAAM,EAAEP,KAAK,EAAE;EAC/C,IAAMQ,GAAG,GAAG,EAAE;EAEdD,MAAM,CAACE,OAAO,CAAC,UAAAR,KAAK,EAAI;IACtB,IAAMS,GAAG,OAAAC,cAAA,CAAAC,OAAA,MAAQX,KAAK,CAAE;IACxB,IAAIF,aAAa,CAACC,KAAK,EAAEU,GAAG,CAAC,EAAE;MAC7B,IAAIA,GAAG,CAACG,QAAQ,EAAE;QAChBH,GAAG,CAACG,QAAQ,GAAGP,iBAAiB,CAACI,GAAG,CAACG,QAAQ,EAAEb,KAAK,CAAC;MACvD;MACAQ,GAAG,CAACM,IAAI,CAACJ,GAAG,CAAC;IACf;EACF,CAAC,CAAC;EAEF,OAAOF,GAAG;AACZ;AAEA,IAAMO,KAAK,GAAG;EACZR,MAAM,EAAE,EAAE;EACVS,SAAS,EAAE;AACb,CAAC;AAED,IAAMC,SAAS,GAAG;EAChBC,UAAU,EAAE,SAAZA,UAAUA,CAAGH,KAAK,EAAER,MAAM,EAAK;IAC7BQ,KAAK,CAACC,SAAS,GAAGT,MAAM;IACxBQ,KAAK,CAACR,MAAM,GAAGY,sBAAc,CAACC,MAAM,CAACb,MAAM,CAAC;EAC9C;AACF,CAAC;AAED,IAAMc,OAAO,GAAG;EACdC,cAAc,WAAdA,cAAcA,CAAAC,IAAA,EAAavB,KAAK,EAAE;IAAA,IAAjBwB,MAAM,GAAAD,IAAA,CAANC,MAAM;IACrB,OAAO,IAAIC,OAAO,CAAC,UAAAC,OAAO,EAAI;MAC5B,IAAIC,cAAc;MAClB,IAAI3B,KAAK,CAACK,QAAQ,CAAC,OAAO,CAAC,EAAE;QAC3BsB,cAAc,GAAGC,mBAAW,IAAI,EAAE;MACpC,CAAC,MAAM;QACLD,cAAc,GAAGrB,iBAAiB,CAACsB,mBAAW,EAAE5B,KAAK,CAAC;MACxD;MACAwB,MAAM,CAAC,YAAY,EAAEG,cAAc,CAAC;MACpCD,OAAO,CAACC,cAAc,CAAC;IACzB,CAAC,CAAC;EACJ;AACF,CAAC;AAAA,IAAAE,QAAA,GAAAC,OAAA,CAAAlB,OAAA,GAEc;EACbmB,UAAU,EAAE,IAAI;EAChBhB,KAAK,EAALA,KAAK;EACLE,SAAS,EAATA,SAAS;EACTI,OAAO,EAAPA;AACF,CAAC","ignoreList":[]}]}