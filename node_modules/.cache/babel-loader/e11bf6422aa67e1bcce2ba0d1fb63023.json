{"remainingRequest":"E:\\Language\\Go\\Project\\Test\\test\\go_gateway_view\\node_modules\\babel-loader\\lib\\index.js!E:\\Language\\Go\\Project\\Test\\test\\go_gateway_view\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\Language\\Go\\Project\\Test\\test\\go_gateway_view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Language\\Go\\Project\\Test\\test\\go_gateway_view\\src\\layout\\components\\Sidebar\\index.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\Language\\Go\\Project\\Test\\test\\go_gateway_view\\src\\layout\\components\\Sidebar\\index.vue","mtime":1725789930863},{"path":"E:\\Language\\Go\\Project\\Test\\test\\go_gateway_view\\babel.config.js","mtime":1725789930622},{"path":"E:\\Language\\Go\\Project\\Test\\test\\go_gateway_view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Language\\Go\\Project\\Test\\test\\go_gateway_view\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\Language\\Go\\Project\\Test\\test\\go_gateway_view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Language\\Go\\Project\\Test\\test\\go_gateway_view\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"E:/Language/Go/Project/Test/test/go_gateway_view/node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _objectSpread2 = _interopRequireDefault(require(\"E:/Language/Go/Project/Test/test/go_gateway_view/node_modules/@babel/runtime/helpers/objectSpread2.js\"));\nvar _vuex = require(\"vuex\");\nvar _Logo = _interopRequireDefault(require(\"./Logo\"));\nvar _SidebarItem = _interopRequireDefault(require(\"./SidebarItem\"));\nvar _variables2 = _interopRequireDefault(require(\"@/styles/variables.scss\"));\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = exports.default = {\n  components: {\n    SidebarItem: _SidebarItem.default,\n    Logo: _Logo.default\n  },\n  computed: (0, _objectSpread2.default)((0, _objectSpread2.default)({}, (0, _vuex.mapGetters)(['permission_routes', 'sidebar'])), {}, {\n    activeMenu: function activeMenu() {\n      var route = this.$route;\n      var meta = route.meta,\n        path = route.path;\n      // if set path, the sidebar will highlight the path you set\n      if (meta.activeMenu) {\n        return meta.activeMenu;\n      }\n      return path;\n    },\n    showLogo: function showLogo() {\n      return this.$store.state.settings.sidebarLogo;\n    },\n    variables: function variables() {\n      return _variables2.default;\n    },\n    isCollapse: function isCollapse() {\n      return !this.sidebar.opened;\n    }\n  })\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;AAqBA,IAAA,KAAA,GAAA,OAAA;AACA,IAAA,KAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,YAAA,GAAA,sBAAA,CAAA,OAAA;AACA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA;;;;;;;;;;;;;;;;;;;;;iCAEA;EACA,UAAA,EAAA;IAAA,WAAA,EAAA,oBAAA;IAAA,IAAA,EAAA;EAAA,CAAA;EACA,QAAA,MAAA,cAAA,CAAA,OAAA,MAAA,cAAA,CAAA,OAAA,MACA,IAAA,gBAAA,EAAA,CACA,mBAAA,EACA,SAAA,CACA,CAAA;IACA,UAAA,WAAA,UAAA,CAAA,EAAA;MACA,IAAA,KAAA,GAAA,IAAA,CAAA,MAAA;MACA,IAAA,IAAA,GAAA,KAAA,CAAA,IAAA;QAAA,IAAA,GAAA,KAAA,CAAA,IAAA;MACA;MACA,IAAA,IAAA,CAAA,UAAA,EAAA;QACA,OAAA,IAAA,CAAA,UAAA;MACA;MACA,OAAA,IAAA;IACA,CAAA;IACA,QAAA,WAAA,QAAA,CAAA,EAAA;MACA,OAAA,IAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,WAAA;IACA,CAAA;IACA,SAAA,WAAA,SAAA,CAAA,EAAA;MACA,OAAA,mBAAA;IACA,CAAA;IACA,UAAA,WAAA,UAAA,CAAA,EAAA;MACA,OAAA,CAAA,IAAA,CAAA,OAAA,CAAA,MAAA;IACA;EAAA;AAEA,CAAA","sourcesContent":["<template>\r\n  <div :class=\"{'has-logo':showLogo}\">\r\n    <logo v-if=\"showLogo\" :collapse=\"isCollapse\" />\r\n    <el-scrollbar wrap-class=\"scrollbar-wrapper\">\r\n      <el-menu\r\n        :default-active=\"activeMenu\"\r\n        :collapse=\"isCollapse\"\r\n        :background-color=\"variables.menuBg\"\r\n        :text-color=\"variables.menuText\"\r\n        :unique-opened=\"false\"\r\n        :active-text-color=\"variables.menuActiveText\"\r\n        :collapse-transition=\"false\"\r\n        mode=\"vertical\"\r\n      >\r\n        <sidebar-item v-for=\"route in permission_routes\" :key=\"route.path\" :item=\"route\" :base-path=\"route.path\" />\r\n      </el-menu>\r\n    </el-scrollbar>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex'\r\nimport Logo from './Logo'\r\nimport SidebarItem from './SidebarItem'\r\nimport variables from '@/styles/variables.scss'\r\n\r\nexport default {\r\n  components: { SidebarItem, Logo },\r\n  computed: {\r\n    ...mapGetters([\r\n      'permission_routes',\r\n      'sidebar'\r\n    ]),\r\n    activeMenu() {\r\n      const route = this.$route\r\n      const { meta, path } = route\r\n      // if set path, the sidebar will highlight the path you set\r\n      if (meta.activeMenu) {\r\n        return meta.activeMenu\r\n      }\r\n      return path\r\n    },\r\n    showLogo() {\r\n      return this.$store.state.settings.sidebarLogo\r\n    },\r\n    variables() {\r\n      return variables\r\n    },\r\n    isCollapse() {\r\n      return !this.sidebar.opened\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":"src/layout/components/Sidebar"}]}