{"remainingRequest":"E:\\Language\\Go\\Project\\Test\\test\\go_gateway_view\\node_modules\\babel-loader\\lib\\index.js!E:\\Language\\Go\\Project\\Test\\test\\go_gateway_view\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\Language\\Go\\Project\\Test\\test\\go_gateway_view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Language\\Go\\Project\\Test\\test\\go_gateway_view\\src\\layout\\components\\TagsView\\index.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\Language\\Go\\Project\\Test\\test\\go_gateway_view\\src\\layout\\components\\TagsView\\index.vue","mtime":1725789930866},{"path":"E:\\Language\\Go\\Project\\Test\\test\\go_gateway_view\\babel.config.js","mtime":1725789930622},{"path":"E:\\Language\\Go\\Project\\Test\\test\\go_gateway_view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Language\\Go\\Project\\Test\\test\\go_gateway_view\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\Language\\Go\\Project\\Test\\test\\go_gateway_view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Language\\Go\\Project\\Test\\test\\go_gateway_view\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"E:/Language/Go/Project/Test/test/go_gateway_view/node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es6.regexp.replace\");\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"E:/Language/Go/Project/Test/test/go_gateway_view/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"E:/Language/Go/Project/Test/test/go_gateway_view/node_modules/@babel/runtime/helpers/toConsumableArray.js\"));\nvar _objectSpread2 = _interopRequireDefault(require(\"E:/Language/Go/Project/Test/test/go_gateway_view/node_modules/@babel/runtime/helpers/objectSpread2.js\"));\nrequire(\"core-js/modules/es6.function.name\");\nrequire(\"core-js/modules/web.dom.iterable\");\nvar _ScrollPane = _interopRequireDefault(require(\"./ScrollPane\"));\nvar _path = _interopRequireDefault(require(\"path\"));\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = exports.default = {\n  components: {\n    ScrollPane: _ScrollPane.default\n  },\n  data: function data() {\n    return {\n      visible: false,\n      top: 0,\n      left: 0,\n      selectedTag: {},\n      affixTags: []\n    };\n  },\n  computed: {\n    visitedViews: function visitedViews() {\n      return this.$store.state.tagsView.visitedViews;\n    },\n    routes: function routes() {\n      return this.$store.state.permission.routes;\n    }\n  },\n  watch: {\n    $route: function $route() {\n      this.addTags();\n      this.moveToCurrentTag();\n    },\n    visible: function visible(value) {\n      if (value) {\n        document.body.addEventListener('click', this.closeMenu);\n      } else {\n        document.body.removeEventListener('click', this.closeMenu);\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.initTags();\n    this.addTags();\n  },\n  methods: {\n    isActive: function isActive(route) {\n      return route.path === this.$route.path;\n    },\n    isAffix: function isAffix(tag) {\n      return tag.meta && tag.meta.affix;\n    },\n    filterAffixTags: function filterAffixTags(routes) {\n      var _this = this;\n      var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '/';\n      var tags = [];\n      routes.forEach(function (route) {\n        if (route.meta && route.meta.affix) {\n          var tagPath = _path.default.resolve(basePath, route.path);\n          tags.push({\n            fullPath: tagPath,\n            path: tagPath,\n            name: route.name,\n            meta: (0, _objectSpread2.default)({}, route.meta)\n          });\n        }\n        if (route.children) {\n          var tempTags = _this.filterAffixTags(route.children, route.path);\n          if (tempTags.length >= 1) {\n            tags = [].concat((0, _toConsumableArray2.default)(tags), (0, _toConsumableArray2.default)(tempTags));\n          }\n        }\n      });\n      return tags;\n    },\n    initTags: function initTags() {\n      var affixTags = this.affixTags = this.filterAffixTags(this.routes);\n      var _iterator = (0, _createForOfIteratorHelper2.default)(affixTags),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var tag = _step.value;\n          // Must have tag name\n          if (tag.name) {\n            this.$store.dispatch('tagsView/addVisitedView', tag);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    },\n    addTags: function addTags() {\n      var name = this.$route.name;\n      if (name) {\n        this.$store.dispatch('tagsView/addView', this.$route);\n      }\n      return false;\n    },\n    moveToCurrentTag: function moveToCurrentTag() {\n      var _this2 = this;\n      var tags = this.$refs.tag;\n      this.$nextTick(function () {\n        var _iterator2 = (0, _createForOfIteratorHelper2.default)(tags),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var tag = _step2.value;\n            if (tag.to.path === _this2.$route.path) {\n              _this2.$refs.scrollPane.moveToTarget(tag);\n              // when query is different then update\n              if (tag.to.fullPath !== _this2.$route.fullPath) {\n                _this2.$store.dispatch('tagsView/updateVisitedView', _this2.$route);\n              }\n              break;\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      });\n    },\n    refreshSelectedTag: function refreshSelectedTag(view) {\n      var _this3 = this;\n      this.$store.dispatch('tagsView/delCachedView', view).then(function () {\n        var fullPath = view.fullPath;\n        _this3.$nextTick(function () {\n          _this3.$router.replace({\n            path: '/redirect' + fullPath\n          });\n        });\n      });\n    },\n    closeSelectedTag: function closeSelectedTag(view) {\n      var _this4 = this;\n      this.$store.dispatch('tagsView/delView', view).then(function (_ref) {\n        var visitedViews = _ref.visitedViews;\n        if (_this4.isActive(view)) {\n          _this4.toLastView(visitedViews, view);\n        }\n      });\n    },\n    closeOthersTags: function closeOthersTags() {\n      var _this5 = this;\n      this.$router.push(this.selectedTag);\n      this.$store.dispatch('tagsView/delOthersViews', this.selectedTag).then(function () {\n        _this5.moveToCurrentTag();\n      });\n    },\n    closeAllTags: function closeAllTags(view) {\n      var _this6 = this;\n      this.$store.dispatch('tagsView/delAllViews').then(function (_ref2) {\n        var visitedViews = _ref2.visitedViews;\n        if (_this6.affixTags.some(function (tag) {\n          return tag.path === view.path;\n        })) {\n          return;\n        }\n        _this6.toLastView(visitedViews, view);\n      });\n    },\n    toLastView: function toLastView(visitedViews, view) {\n      var latestView = visitedViews.slice(-1)[0];\n      if (latestView) {\n        this.$router.push(latestView.fullPath);\n      } else {\n        // now the default is to redirect to the home page if there is no tags-view,\n        // you can adjust it according to your needs.\n        if (view.name === 'Dashboard') {\n          // to reload home page\n          this.$router.replace({\n            path: '/redirect' + view.fullPath\n          });\n        } else {\n          this.$router.push('/');\n        }\n      }\n    },\n    openMenu: function openMenu(tag, e) {\n      var menuMinWidth = 105;\n      var offsetLeft = this.$el.getBoundingClientRect().left; // container margin left\n      var offsetWidth = this.$el.offsetWidth; // container width\n      var maxLeft = offsetWidth - menuMinWidth; // left boundary\n      var left = e.clientX - offsetLeft + 15; // 15: margin right\n\n      if (left > maxLeft) {\n        this.left = maxLeft;\n      } else {\n        this.left = left;\n      }\n      this.top = e.clientY;\n      this.visible = true;\n      this.selectedTag = tag;\n    },\n    closeMenu: function closeMenu() {\n      this.visible = false;\n    }\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div id=\"tags-view-container\" class=\"tags-view-container\">\r\n    <scroll-pane ref=\"scrollPane\" class=\"tags-view-wrapper\">\r\n      <router-link\r\n        v-for=\"tag in visitedViews\"\r\n        ref=\"tag\"\r\n        :key=\"tag.path\"\r\n        :class=\"isActive(tag)?'active':''\"\r\n        :to=\"{ path: tag.path, query: tag.query, fullPath: tag.fullPath }\"\r\n        tag=\"span\"\r\n        class=\"tags-view-item\"\r\n        @click.middle.native=\"!isAffix(tag)?closeSelectedTag(tag):''\"\r\n        @contextmenu.prevent.native=\"openMenu(tag,$event)\"\r\n      >\r\n        {{ tag.title }}\r\n        <span v-if=\"!isAffix(tag)\" class=\"el-icon-close\" @click.prevent.stop=\"closeSelectedTag(tag)\" />\r\n      </router-link>\r\n    </scroll-pane>\r\n    <ul v-show=\"visible\" :style=\"{left:left+'px',top:top+'px'}\" class=\"contextmenu\">\r\n      <li @click=\"refreshSelectedTag(selectedTag)\">Refresh</li>\r\n      <li v-if=\"!isAffix(selectedTag)\" @click=\"closeSelectedTag(selectedTag)\">Close</li>\r\n      <li @click=\"closeOthersTags\">Close Others</li>\r\n      <li @click=\"closeAllTags(selectedTag)\">Close All</li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ScrollPane from './ScrollPane'\r\nimport path from 'path'\r\n\r\nexport default {\r\n  components: { ScrollPane },\r\n  data() {\r\n    return {\r\n      visible: false,\r\n      top: 0,\r\n      left: 0,\r\n      selectedTag: {},\r\n      affixTags: []\r\n    }\r\n  },\r\n  computed: {\r\n    visitedViews() {\r\n      return this.$store.state.tagsView.visitedViews\r\n    },\r\n    routes() {\r\n      return this.$store.state.permission.routes\r\n    }\r\n  },\r\n  watch: {\r\n    $route() {\r\n      this.addTags()\r\n      this.moveToCurrentTag()\r\n    },\r\n    visible(value) {\r\n      if (value) {\r\n        document.body.addEventListener('click', this.closeMenu)\r\n      } else {\r\n        document.body.removeEventListener('click', this.closeMenu)\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initTags()\r\n    this.addTags()\r\n  },\r\n  methods: {\r\n    isActive(route) {\r\n      return route.path === this.$route.path\r\n    },\r\n    isAffix(tag) {\r\n      return tag.meta && tag.meta.affix\r\n    },\r\n    filterAffixTags(routes, basePath = '/') {\r\n      let tags = []\r\n      routes.forEach(route => {\r\n        if (route.meta && route.meta.affix) {\r\n          const tagPath = path.resolve(basePath, route.path)\r\n          tags.push({\r\n            fullPath: tagPath,\r\n            path: tagPath,\r\n            name: route.name,\r\n            meta: { ...route.meta }\r\n          })\r\n        }\r\n        if (route.children) {\r\n          const tempTags = this.filterAffixTags(route.children, route.path)\r\n          if (tempTags.length >= 1) {\r\n            tags = [...tags, ...tempTags]\r\n          }\r\n        }\r\n      })\r\n      return tags\r\n    },\r\n    initTags() {\r\n      const affixTags = this.affixTags = this.filterAffixTags(this.routes)\r\n      for (const tag of affixTags) {\r\n        // Must have tag name\r\n        if (tag.name) {\r\n          this.$store.dispatch('tagsView/addVisitedView', tag)\r\n        }\r\n      }\r\n    },\r\n    addTags() {\r\n      const { name } = this.$route\r\n      if (name) {\r\n        this.$store.dispatch('tagsView/addView', this.$route)\r\n      }\r\n      return false\r\n    },\r\n    moveToCurrentTag() {\r\n      const tags = this.$refs.tag\r\n      this.$nextTick(() => {\r\n        for (const tag of tags) {\r\n          if (tag.to.path === this.$route.path) {\r\n            this.$refs.scrollPane.moveToTarget(tag)\r\n            // when query is different then update\r\n            if (tag.to.fullPath !== this.$route.fullPath) {\r\n              this.$store.dispatch('tagsView/updateVisitedView', this.$route)\r\n            }\r\n            break\r\n          }\r\n        }\r\n      })\r\n    },\r\n    refreshSelectedTag(view) {\r\n      this.$store.dispatch('tagsView/delCachedView', view).then(() => {\r\n        const { fullPath } = view\r\n        this.$nextTick(() => {\r\n          this.$router.replace({\r\n            path: '/redirect' + fullPath\r\n          })\r\n        })\r\n      })\r\n    },\r\n    closeSelectedTag(view) {\r\n      this.$store.dispatch('tagsView/delView', view).then(({ visitedViews }) => {\r\n        if (this.isActive(view)) {\r\n          this.toLastView(visitedViews, view)\r\n        }\r\n      })\r\n    },\r\n    closeOthersTags() {\r\n      this.$router.push(this.selectedTag)\r\n      this.$store.dispatch('tagsView/delOthersViews', this.selectedTag).then(() => {\r\n        this.moveToCurrentTag()\r\n      })\r\n    },\r\n    closeAllTags(view) {\r\n      this.$store.dispatch('tagsView/delAllViews').then(({ visitedViews }) => {\r\n        if (this.affixTags.some(tag => tag.path === view.path)) {\r\n          return\r\n        }\r\n        this.toLastView(visitedViews, view)\r\n      })\r\n    },\r\n    toLastView(visitedViews, view) {\r\n      const latestView = visitedViews.slice(-1)[0]\r\n      if (latestView) {\r\n        this.$router.push(latestView.fullPath)\r\n      } else {\r\n        // now the default is to redirect to the home page if there is no tags-view,\r\n        // you can adjust it according to your needs.\r\n        if (view.name === 'Dashboard') {\r\n          // to reload home page\r\n          this.$router.replace({ path: '/redirect' + view.fullPath })\r\n        } else {\r\n          this.$router.push('/')\r\n        }\r\n      }\r\n    },\r\n    openMenu(tag, e) {\r\n      const menuMinWidth = 105\r\n      const offsetLeft = this.$el.getBoundingClientRect().left // container margin left\r\n      const offsetWidth = this.$el.offsetWidth // container width\r\n      const maxLeft = offsetWidth - menuMinWidth // left boundary\r\n      const left = e.clientX - offsetLeft + 15 // 15: margin right\r\n\r\n      if (left > maxLeft) {\r\n        this.left = maxLeft\r\n      } else {\r\n        this.left = left\r\n      }\r\n\r\n      this.top = e.clientY\r\n      this.visible = true\r\n      this.selectedTag = tag\r\n    },\r\n    closeMenu() {\r\n      this.visible = false\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.tags-view-container {\r\n  height: 34px;\r\n  width: 100%;\r\n  background: #fff;\r\n  border-bottom: 1px solid #d8dce5;\r\n  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, .12), 0 0 3px 0 rgba(0, 0, 0, .04);\r\n  .tags-view-wrapper {\r\n    .tags-view-item {\r\n      display: inline-block;\r\n      position: relative;\r\n      cursor: pointer;\r\n      height: 26px;\r\n      line-height: 26px;\r\n      border: 1px solid #d8dce5;\r\n      color: #495060;\r\n      background: #fff;\r\n      padding: 0 8px;\r\n      font-size: 12px;\r\n      margin-left: 5px;\r\n      margin-top: 4px;\r\n      &:first-of-type {\r\n        margin-left: 15px;\r\n      }\r\n      &:last-of-type {\r\n        margin-right: 15px;\r\n      }\r\n      &.active {\r\n        background-color: #42b983;\r\n        color: #fff;\r\n        border-color: #42b983;\r\n        &::before {\r\n          content: '';\r\n          background: #fff;\r\n          display: inline-block;\r\n          width: 8px;\r\n          height: 8px;\r\n          border-radius: 50%;\r\n          position: relative;\r\n          margin-right: 2px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .contextmenu {\r\n    margin: 0;\r\n    background: #fff;\r\n    z-index: 3000;\r\n    position: absolute;\r\n    list-style-type: none;\r\n    padding: 5px 0;\r\n    border-radius: 4px;\r\n    font-size: 12px;\r\n    font-weight: 400;\r\n    color: #333;\r\n    box-shadow: 2px 2px 3px 0 rgba(0, 0, 0, .3);\r\n    li {\r\n      margin: 0;\r\n      padding: 7px 16px;\r\n      cursor: pointer;\r\n      &:hover {\r\n        background: #eee;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n\r\n<style lang=\"scss\">\r\n//reset element css of el-icon-close\r\n.tags-view-wrapper {\r\n  .tags-view-item {\r\n    .el-icon-close {\r\n      width: 16px;\r\n      height: 16px;\r\n      vertical-align: 2px;\r\n      border-radius: 50%;\r\n      text-align: center;\r\n      transition: all .3s cubic-bezier(.645, .045, .355, 1);\r\n      transform-origin: 100% 50%;\r\n      &:before {\r\n        transform: scale(.6);\r\n        display: inline-block;\r\n        vertical-align: -3px;\r\n      }\r\n      &:hover {\r\n        background-color: #b4bccc;\r\n        color: #fff;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n"],"sourceRoot":"src/layout/components/TagsView"}]}